AWSTemplateFormatVersion: '2010-09-09'
Transform:
- AWS::Serverless-2016-10-31
Description: Lambda CloudFormation Lab
Resources:
  GetUser:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getUser
      Handler: user.getUser
      Runtime: python3.6
      CodeUri: s3://deploy-bucket-carlos/c6afab12465b27fadf820ddfa3f96a2a
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: MyTable
      Environment:
        Variables:
          USERS_TABLE:
            Ref: MyTable
      Events:
        GetUsers:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /user/{userId}
            Method: GET
  PutUser:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putUser
      Handler: user.putUser
      Runtime: python3.6
      CodeUri: s3://deploy-bucket-carlos/c6afab12465b27fadf820ddfa3f96a2a
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: MyTable
      Environment:
        Variables:
          USERS_TABLE:
            Ref: MyTable
      Events:
        GetUsers:
          Type: Api
          Properties:
            RestApiId:
              Ref: MyAPI
            Path: /user/{userId}
            Method: PUT
  MyAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: my-api-gateway
      StageName: prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: s3://deploy-bucket-carlos/a7e7ae1817c768aef7145c6e0311d0a2
  MyTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: users-table
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      KeySchema:
      - AttributeName: pk
        KeyType: HASH
      - AttributeName: sk
        KeyType: RANGE
      AttributeDefinitions:
      - AttributeName: pk
        AttributeType: S
      - AttributeName: sk
        AttributeType: S
